---
import MainLayout from '@/layouts/main-layout.astro';
import Display from '@/components/display';
import Team from '@/components/team';
import SideButtons from '@/components/side-buttons';
import PokemonSearch from '@/components/pokemon-search';
import Filters from '@/components/filters';

const delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));

async function fetchWithRetry(url: string, retries = 3) {
	for (let i = 0; i < retries; i++) {
		try {
			const response = await fetch(url);
			if (!response.ok)
				throw new Error(`HTTP error! status: ${response.status}`);
			return await response.json();
		} catch (error) {
			if (i === retries - 1) throw error;
			await delay(1000);
		}
	}
}

const BATCH_SIZE = 1000000;
const pokemonList = await fetchWithRetry(
	`${import.meta.env.PUBLIC_POKEAPI}/pokemon?offset=0&limit=${BATCH_SIZE}`
);

const pokemon = (
	await Promise.all(
		pokemonList.results.map(async ({ url }: { url: string }, index: number) => {
			await delay(index * 100);
			const mon = await fetchWithRetry(url);
			return {
				id: mon.id,
				name: mon.name,
				sprite: mon.sprites.front_default,
				types: mon.types.map(
					({ type }: { type: { name: string } }) => type.name
				),
			};
		})
	)
).filter(({ sprite }: { sprite: string }) => sprite !== null);
---

<MainLayout>
	<main
		class='w-full h-full pt-[37.5vh] flex flex-col place-content-between place-items-center'
	>
		<Display client:load />
		<Team client:load />
		<SideButtons client:load />
		<PokemonSearch pokemon={pokemon} client:load />
		<Filters client:load />
	</main>
</MainLayout>
